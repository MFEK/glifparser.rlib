initSidebarItems({"enum":[["GlifOutlineType",""],["OutlineType",""]],"mod":[["contour",""],["create",""]],"struct":[["GlifOutline",""]],"trait":[["FromKurbo",""],["IntoGlifPoints",""],["IntoKurbo",""],["QuadToCubic",""],["RefigurePointTypes",""],["Reverse","Reverse the logical (visual) order of Bézier splines in a contour, flipping handles as necessary, and taking into account open/closed state."],["RoundToInt","This trait is primarily intended for easing .glif equality testing internally by our test suite. It therefore doesn’t do any of the fancy things it could like change point types and assert handles as colocated. Consider MFEKmath::Refigure, RefigurePointTypes, etc., and not this (or perhaps together?)."]],"type":[["Contour",""],["GlifContour",""],["Outline",""]]});