window.SIDEBAR_ITEMS = {"constant":[["DEFAULT_ACCURACY","A default value for methods that take an ‘accuracy’ argument."],["MAX_EXTREMA","The maximum number of extrema that can be reported in the `ParamCurveExtrema` trait."]],"enum":[["PathEl","The element of a Bézier path."],["PathSeg","A segment of a Bézier path."],["SvgParseError","An error which can be returned when parsing an SVG."]],"fn":[["cubics_to_quadratic_splines","Convert multiple cubic Bézier curves to quadratic splines."],["flatten","Flatten the path, invoking the callback repeatedly."],["segments","Transform an iterator over path elements into one over path segments."]],"mod":[["common","Common mathematical operations"]],"struct":[["Affine","A 2D affine transform."],["Arc","A single arc segment."],["BezPath","A Bézier path."],["Circle","A circle."],["CircleSegment","A segment of a circle."],["ConstPoint","A trivial “curve” that is just a constant."],["CubicBez","A single cubic Bézier segment."],["CubicBezIter","An iterator for cubic beziers."],["Ellipse","An ellipse."],["Insets","Insets from the edges of a rectangle."],["Line","A single line."],["LineIntersection","An intersection of a [`Line`] and a [`PathSeg`]."],["MinDistance","The minimum distance between two Bézier curves."],["Nearest","The nearest position on a curve to some point."],["PathSegIter","An iterator for path segments."],["Point","A 2D point."],["QuadBez","A single quadratic Bézier segment."],["QuadBezIter","An iterator for quadratic beziers."],["QuadSpline","A quadratic Bézier spline."],["Rect","A rectangle."],["RoundedRect","A rectangle with equally rounded corners."],["RoundedRectRadii","Radii for each corner of a rounded rectangle."],["Segments","An iterator that transforms path elements to path segments."],["Size","A 2D size."],["SvgArc","A single SVG arc segment."],["TranslateScale","A transformation including scaling and translation."],["Vec2","A 2D vector."]],"trait":[["ParamCurve","A curve parametrized by a scalar."],["ParamCurveArclen","A parametrized curve that can have its arc length measured."],["ParamCurveArea","A parametrized curve that can have its signed area measured."],["ParamCurveCurvature","A parametrized curve that reports its curvature."],["ParamCurveDeriv","A differentiable parametrized curve."],["ParamCurveExtrema","A parametrized curve that reports its extrema."],["ParamCurveNearest","A parametrized curve that reports the nearest point."],["Shape","A generic trait for open and closed shapes."]]};