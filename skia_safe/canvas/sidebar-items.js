window.SIDEBAR_ITEMS = {"enum":[["AutoCanvasRestore",""],["GlyphPositions","Used to pass either a slice of [`Point`] or [`RSXform`] to [`Canvas::draw_glyphs_at`]."],["PointMode","Selects if an array of points are drawn as discrete points, as lines, or as an open polygon."],["SrcRectConstraint","[`SrcRectConstraint`] controls the behavior at the edge of source [`Rect`], provided to [`Canvas::draw_image_rect()`] when there is any filtering. If kStrict is set, then extra code is used to ensure it nevers samples outside of the src-rect."]],"mod":[["lattice",""]],"struct":[["AutoRestoredCanvas","Stack helper class calls [`Canvas::restore_to_count()`] when [`AutoCanvasRestore`] goes out of scope. Use this to guarantee that the canvas is restored to a known state."],["Canvas","[`Canvas`] provides an interface for drawing, and how the drawing is clipped and transformed. [`Canvas`] contains a stack of [`Matrix`] and clip values."],["Lattice","[`Lattice`] divides [`crate::Bitmap`] or [`crate::Image`] into a rectangular grid. Grid entries on even columns and even rows are fixed; these entries are always drawn at their original size if the destination is large enough. If the destination side is too small to hold the fixed entries, all fixed entries are proportionately scaled down to fit. The grid entries not on even columns and rows are scaled to fit the remaining space, if any."],["OwnedCanvas","Represents a [`Canvas`] that is owned and dropped when it goes out of scope and is bound to the lifetime of some other value (an array of pixels for example)."],["SaveLayerFlags","[`SaveLayerFlags`] provides options that may be used in any combination in [`SaveLayerRec`], defining how layer allocated by [`Canvas::save_layer()`] operates. It may be set to zero, [`PRESERVE_LCD_TEXT`], [`INIT_WITH_PREVIOUS`], or both flags."],["SaveLayerRec","[`SaveLayerRec`] contains the state used to create the layer."],["TopLayerPixels","Provides access to Canvasâ€™s pixels."]],"trait":[["SetMatrix",""]]};